#include<bits/stdc++.h>
using namespace std;

#define si(a) scanf("%d",&a)
#define f first
#define s second
#define mp(a,b) make_pair(a,b)
#define MAX 1005

int dist[MAX];
vector<pair<int,int> > gr[MAX];

priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > Q;

void dijkstra(int st)
{
    Q.push(mp(0,st));
    memset(dist,-1,sizeof(dist));
    while(!Q.empty()){
        int u=Q.top().s,ds=Q.top().f;
        Q.pop();

        if(dist[u]!=-1)
            continue;
        dist[u]=ds;
        for(int i=0;i<gr[u].size();i++){
            int v=gr[u][i].f,w=gr[u][i].s;
            Q.push(mp(w+ds,v));
        }
    }
    return ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    int n,m,i,t;
    si(t);
    for(int cs=1;cs<=t;cs++){
        for(i=0;i<MAX;i++)gr[i].clear();
        si(n);si(m);
        for(i=0;i<m;i++){
            int u,v,w;
            si(u);si(v);si(w);
            gr[u].push_back(mp(v,w));
            gr[v].push_back(mp(u,w));
        }

        dijkstra(1);
        printf("Case %d: ",cs);
        if(dist[n]==-1)printf("Impossible\n");
        else printf("%d\n",dist[n]);

    }
    return 0;
}

